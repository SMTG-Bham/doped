name: Release and publish

on:
  workflow_dispatch:

  workflow_run:
    workflows: [ "Build and test package" ]
    branches: [ master ]
    types:
      - completed  # only release when tests have passed

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools setuptools_scm wheel
          pip install numpy
          pip install -e .
          pip install -e .[tests]

      - name: Test  # To be added later
        run:  |
          pytest --ignore local_doped_testing  # test everything

      - name: Build packages
        run: |
          python3 -m pip install --upgrade build
          python3 -m build

      - name: Publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Write release info
        run: |
          awk 'BEGIN {p = 0} {a = 0 }; /^v\d*.\d*.\d*./ { p += 1; a = 1}; p + a == 1 { print } ' CHANGELOG.rst | sed -e '1,1d' | sed  -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' > release_info.txt

      - name: Get Release Tag
        run: |
          VERSION=$(grep version pyproject.toml | awk '{print $NF}' | tr -d '"' | head -1)
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Release
        uses: actions/create-release@v1
        id: create_release

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body_path: release_info.txt
          draft: false
          prerelease: false
